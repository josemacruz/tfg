{"ast":null,"code":"var _jsxFileName = \"/home/josema/tfg/client/src/components/BasicTable/index.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-undef */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable react/prop-types */\nimport React, { useMemo, useState } from 'react';\nimport { AgGridReact, AgGridColumn } from 'ag-grid-react';\nimport formatClassname from './utils';\nimport './styles.scss';\nimport { SetLeftFeature } from 'ag-grid-community';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BasicTable(props) {\n  _s();\n\n  const {\n    config\n  } = props;\n  const [gridApi, setGridApi] = useState(null);\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n\n  const onGridReady = params => {\n    setGridApi(params.api);\n    setGridColumnApi(params.columnApi);\n    var cols = params.columnApi.getAllColumns();\n    cols.forEach(function (col) {\n      var colDef = col.getUserProvidedColDef();\n    });\n  }; // * --------------------- [STATE] --------------------- * //\n\n\n  const createRowData = () => {\n    var data = [];\n\n    for (var i = 0; i < 20; i++) {\n      data.push({\n        height: Math.floor(Math.random() * 100),\n        width: Math.floor(Math.random() * 100),\n        depth: Math.floor(Math.random() * 100)\n      });\n    }\n\n    return data;\n  }; // * --------------------- [EVENT HANDLING] --------------------- * //\n  // * --------------------- [LIFECYCLE EFFECTS] --------------------- * //\n\n\n  const classTableHeaderColor = useMemo(() => {\n    var _config$colors;\n\n    return formatClassname(config === null || config === void 0 ? void 0 : (_config$colors = config.colors) === null || _config$colors === void 0 ? void 0 : _config$colors.headerTableBackground, 'COLOR');\n  }, [config]);\n  const classTableHeaderTextColor = useMemo(() => {\n    var _config$colors2;\n\n    return formatClassname(config === null || config === void 0 ? void 0 : (_config$colors2 = config.colors) === null || _config$colors2 === void 0 ? void 0 : _config$colors2.headerTableColorText, 'TEXT');\n  }, [config]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `ag-react-container ag-theme-alpine ${classTableHeaderColor} ${classTableHeaderTextColor}`,\n    style: {\n      height: '100%',\n      width: '100%',\n      'padding-left': '10px'\n    },\n    children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n      rowData: createRowData(),\n      onGridReady: onGridReady,\n      defaultColDef: {\n        flex: 1,\n        minWidth: 90,\n        resizable: true,\n        sortable: true\n      },\n      pagination: true,\n      paginationAutoPageSize: true,\n      suppressAggFuncInHeader: true,\n      animateRows: true,\n      children: [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n        headerName: \"Col 1\",\n        colId: \"firstCol\",\n        field: \"height\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        headerName: \"Col 2\",\n        colId: \"firstCol\",\n        field: \"height\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        headerName: \"Col 3\",\n        field: \"height\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        headerName: \"Col 4\",\n        field: \"height\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        headerName: \"Col 5\",\n        valueGetter: \"data.width\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        headerName: \"Col 6\",\n        valueGetter: \"data.width\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BasicTable, \"2nEJWUqbLn8gP00UPO/XsjAgoYk=\");\n\n_c = BasicTable;\nexport default BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["/home/josema/tfg/client/src/components/BasicTable/index.jsx"],"names":["React","useMemo","useState","AgGridReact","AgGridColumn","formatClassname","SetLeftFeature","BasicTable","props","config","gridApi","setGridApi","gridColumnApi","setGridColumnApi","onGridReady","params","api","columnApi","cols","getAllColumns","forEach","col","colDef","getUserProvidedColDef","createRowData","data","i","push","height","Math","floor","random","width","depth","classTableHeaderColor","colors","headerTableBackground","classTableHeaderTextColor","headerTableColorText","flex","minWidth","resizable","sortable"],"mappings":";;;AAAA;;AACA;;AACA;AACA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,QAAzB,QAAyC,OAAzC;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,eAA1C;AACA,OAAOC,eAAP,MAA4B,SAA5B;AACA,OAAO,eAAP;AACA,SAASC,cAAT,QAA+B,mBAA/B;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACzB,QAAM;AACJC,IAAAA;AADI,MAEFD,KAFJ;AAIA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,IAAD,CAAlD;;AAEA,QAAMY,WAAW,GAAIC,MAAD,IAAY;AAC9BJ,IAAAA,UAAU,CAACI,MAAM,CAACC,GAAR,CAAV;AACAH,IAAAA,gBAAgB,CAACE,MAAM,CAACE,SAAR,CAAhB;AAEA,QAAIC,IAAI,GAAGH,MAAM,CAACE,SAAP,CAAiBE,aAAjB,EAAX;AACAD,IAAAA,IAAI,CAACE,OAAL,CAAa,UAAUC,GAAV,EAAe;AAC1B,UAAIC,MAAM,GAAGD,GAAG,CAACE,qBAAJ,EAAb;AAED,KAHD;AAID,GATD,CARyB,CAmBzB;;;AACA,QAAMC,aAAa,GAAG,MAAM;AAC1B,QAAIC,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BD,MAAAA,IAAI,CAACE,IAAL,CAAU;AACRC,QAAAA,MAAM,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CADA;AAERC,QAAAA,KAAK,EAAEH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAFC;AAGRE,QAAAA,KAAK,EAAEJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B;AAHC,OAAV;AAKD;;AACD,WAAON,IAAP;AACD,GAVD,CApByB,CA+BzB;AAEA;;;AACA,QAAMS,qBAAqB,GAAGjC,OAAO,CAAC;AAAA;;AAAA,WAAMI,eAAe,CACzDI,MADyD,aACzDA,MADyD,yCACzDA,MAAM,CAAE0B,MADiD,mDACzD,eAAgBC,qBADyC,EAClB,OADkB,CAArB;AAAA,GAAD,EAElC,CAAC3B,MAAD,CAFkC,CAArC;AAGA,QAAM4B,yBAAyB,GAAGpC,OAAO,CAAC;AAAA;;AAAA,WAAMI,eAAe,CAC7DI,MAD6D,aAC7DA,MAD6D,0CAC7DA,MAAM,CAAE0B,MADqD,oDAC7D,gBAAgBG,oBAD6C,EACvB,MADuB,CAArB;AAAA,GAAD,EAEtC,CAAC7B,MAAD,CAFsC,CAAzC;AAIA,sBACE;AACA,IAAA,SAAS,EAAG,sCAAqCyB,qBAAsB,IAAGG,yBAA0B,EADpG;AAEA,IAAA,KAAK,EAAE;AAAET,MAAAA,MAAM,EAAE,MAAV;AAAkBI,MAAAA,KAAK,EAAE,MAAzB;AAAiC,sBAAgB;AAAjD,KAFP;AAAA,2BAIO,QAAC,WAAD;AACA,MAAA,OAAO,EAAER,aAAa,EADtB;AAEA,MAAA,WAAW,EAAEV,WAFb;AAGA,MAAA,aAAa,EAAE;AACZyB,QAAAA,IAAI,EAAE,CADM;AAEZC,QAAAA,QAAQ,EAAE,EAFE;AAGZC,QAAAA,SAAS,EAAE,IAHC;AAIZC,QAAAA,QAAQ,EAAE;AAJE,OAHf;AASC,MAAA,UAAU,EAAE,IATb;AAUC,MAAA,sBAAsB,EAAE,IAVzB;AAWC,MAAA,uBAAuB,EAAE,IAX1B;AAYC,MAAA,WAAW,EAAE,IAZd;AAAA,8BAcC,QAAC,YAAD;AAAc,QAAA,UAAU,EAAC,OAAzB;AAAiC,QAAA,KAAK,EAAC,UAAvC;AAAkD,QAAA,KAAK,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,cAdD,eAeC,QAAC,YAAD;AAAc,QAAA,UAAU,EAAC,OAAzB;AAAiC,QAAA,KAAK,EAAC,UAAvC;AAAkD,QAAA,KAAK,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,cAfD,eAgBC,QAAC,YAAD;AAAc,QAAA,UAAU,EAAC,OAAzB;AAAiC,QAAA,KAAK,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,cAhBD,eAiBC,QAAC,YAAD;AAAc,QAAA,UAAU,EAAC,OAAzB;AAAiC,QAAA,KAAK,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,cAjBD,eAkBC,QAAC,YAAD;AAAc,QAAA,UAAU,EAAC,OAAzB;AAAiC,QAAA,WAAW,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,cAlBD,eAmBC,QAAC,YAAD;AAAc,QAAA,UAAU,EAAC,OAAzB;AAAiC,QAAA,WAAW,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,cAnBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAJP;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GArEQnC,U;;KAAAA,U;AAuET,eAAeA,UAAf","sourcesContent":["/* eslint-disable no-undef */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/prop-types */\nimport React, { useMemo, useState } from 'react';\nimport { AgGridReact, AgGridColumn } from 'ag-grid-react';\nimport formatClassname from './utils';\nimport './styles.scss';\nimport { SetLeftFeature } from 'ag-grid-community';\n\nfunction BasicTable(props) {\n  const {\n    config,\n  } = props;\n\n  const [gridApi, setGridApi] = useState(null);\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n\n  const onGridReady = (params) => {\n    setGridApi(params.api);\n    setGridColumnApi(params.columnApi);\n\n    var cols = params.columnApi.getAllColumns();\n    cols.forEach(function (col) {\n      var colDef = col.getUserProvidedColDef();\n  \n    });\n  };\n\n  // * --------------------- [STATE] --------------------- * //\n  const createRowData = () => {\n    var data = [];\n    for (var i = 0; i < 20; i++) {\n      data.push({\n        height: Math.floor(Math.random() * 100),\n        width: Math.floor(Math.random() * 100),\n        depth: Math.floor(Math.random() * 100),\n      });\n    }\n    return data;\n  };\n  // * --------------------- [EVENT HANDLING] --------------------- * //\n\n  // * --------------------- [LIFECYCLE EFFECTS] --------------------- * //\n  const classTableHeaderColor = useMemo(() => formatClassname(\n    config?.colors?.headerTableBackground, 'COLOR',\n  ), [config]);\n  const classTableHeaderTextColor = useMemo(() => formatClassname(\n    config?.colors?.headerTableColorText, 'TEXT',\n  ), [config]);\n\n  return (\n    <div\n    className={`ag-react-container ag-theme-alpine ${classTableHeaderColor} ${classTableHeaderTextColor}`}\n    style={{ height: '100%', width: '100%', 'padding-left': '10px' }}\n  >\n           <AgGridReact\n           rowData={createRowData()}\n           onGridReady={onGridReady}\n           defaultColDef={{\n              flex: 1,\n              minWidth: 90,\n              resizable: true,\n              sortable: true,\n            }}\n            pagination={true}\n            paginationAutoPageSize={true}\n            suppressAggFuncInHeader={true}\n            animateRows={true}\n           >\n            <AgGridColumn headerName=\"Col 1\" colId=\"firstCol\" field=\"height\" />\n            <AgGridColumn headerName=\"Col 2\" colId=\"firstCol\" field=\"height\" />\n            <AgGridColumn headerName=\"Col 3\" field=\"height\" />\n            <AgGridColumn headerName=\"Col 4\" field=\"height\" />\n            <AgGridColumn headerName=\"Col 5\" valueGetter=\"data.width\" />\n            <AgGridColumn headerName=\"Col 6\" valueGetter=\"data.width\" />\n          </AgGridReact>\n    </div>\n  );\n}\n\nexport default BasicTable;\n"]},"metadata":{},"sourceType":"module"}