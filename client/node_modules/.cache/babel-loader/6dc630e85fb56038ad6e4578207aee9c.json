{"ast":null,"code":"const formatClassname = (color, type) => {\n  var _color$toUpperCase;\n\n  const colorMode = type === 'COLOR';\n\n  switch ((_color$toUpperCase = color === null || color === void 0 ? void 0 : color.toUpperCase()) !== null && _color$toUpperCase !== void 0 ? _color$toUpperCase : '#2B334A') {\n    case '#577EE8':\n      return colorMode ? 'color1' : 'text1';\n\n    case '#ACD356':\n      return colorMode ? 'color2' : 'text2';\n\n    case '#E12C50':\n      return colorMode ? 'color3' : 'text3';\n\n    case '#2B334A':\n      return colorMode ? 'color4' : 'text4';\n\n    case '#FC381D':\n      return colorMode ? 'color5' : 'text5';\n\n    case '#F1AF00':\n      return colorMode ? 'color6' : 'text6';\n\n    case '#00D3A4':\n      return colorMode ? 'color7' : 'text7';\n\n    case '#7B144D':\n      return colorMode ? 'color8' : 'text8';\n\n    case '#C039D5':\n      return colorMode ? 'color9' : 'text9';\n\n    case '#0F51A5':\n      return colorMode ? 'color10' : 'text10';\n\n    case '#40DCFF':\n      return colorMode ? 'color11' : 'text11';\n\n    case '#0A2D53':\n      return colorMode ? 'color12' : 'text12';\n\n    case '#E8E8E8':\n      return colorMode ? 'color14' : 'text14';\n\n    default:\n      return colorMode ? 'color13' : 'text13';\n  }\n};\n\nexport default formatClassname;","map":{"version":3,"sources":["/home/josema/tfg/client/src/components/BasicTable/utils.js"],"names":["formatClassname","color","type","colorMode","toUpperCase"],"mappings":"AAAA,MAAMA,eAAe,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAAA;;AACvC,QAAMC,SAAS,GAAGD,IAAI,KAAK,OAA3B;;AACA,gCAAQD,KAAR,aAAQA,KAAR,uBAAQA,KAAK,CAAEG,WAAP,EAAR,mEAAgC,SAAhC;AACE,SAAK,SAAL;AACE,aAAOD,SAAS,GAAG,QAAH,GAAc,OAA9B;;AACF,SAAK,SAAL;AACE,aAAOA,SAAS,GAAG,QAAH,GAAc,OAA9B;;AACF,SAAK,SAAL;AACE,aAAOA,SAAS,GAAG,QAAH,GAAc,OAA9B;;AACF,SAAK,SAAL;AACE,aAAOA,SAAS,GAAG,QAAH,GAAc,OAA9B;;AACF,SAAK,SAAL;AACE,aAAOA,SAAS,GAAG,QAAH,GAAc,OAA9B;;AACF,SAAK,SAAL;AACE,aAAOA,SAAS,GAAG,QAAH,GAAc,OAA9B;;AACF,SAAK,SAAL;AACE,aAAOA,SAAS,GAAG,QAAH,GAAc,OAA9B;;AACF,SAAK,SAAL;AACE,aAAOA,SAAS,GAAG,QAAH,GAAc,OAA9B;;AACF,SAAK,SAAL;AACE,aAAOA,SAAS,GAAG,QAAH,GAAc,OAA9B;;AACF,SAAK,SAAL;AACE,aAAOA,SAAS,GAAG,SAAH,GAAe,QAA/B;;AACF,SAAK,SAAL;AACE,aAAOA,SAAS,GAAG,SAAH,GAAe,QAA/B;;AACF,SAAK,SAAL;AACE,aAAOA,SAAS,GAAG,SAAH,GAAe,QAA/B;;AACF,SAAK,SAAL;AACE,aAAOA,SAAS,GAAG,SAAH,GAAe,QAA/B;;AACF;AACE,aAAOA,SAAS,GAAG,SAAH,GAAe,QAA/B;AA5BJ;AA8BD,CAhCD;;AAkCA,eAAeH,eAAf","sourcesContent":["const formatClassname = (color, type) => {\n  const colorMode = type === 'COLOR';\n  switch (color?.toUpperCase() ?? '#2B334A') {\n    case '#577EE8':\n      return colorMode ? 'color1' : 'text1';\n    case '#ACD356':\n      return colorMode ? 'color2' : 'text2';\n    case '#E12C50':\n      return colorMode ? 'color3' : 'text3';\n    case '#2B334A':\n      return colorMode ? 'color4' : 'text4';\n    case '#FC381D':\n      return colorMode ? 'color5' : 'text5';\n    case '#F1AF00':\n      return colorMode ? 'color6' : 'text6';\n    case '#00D3A4':\n      return colorMode ? 'color7' : 'text7';\n    case '#7B144D':\n      return colorMode ? 'color8' : 'text8';\n    case '#C039D5':\n      return colorMode ? 'color9' : 'text9';\n    case '#0F51A5':\n      return colorMode ? 'color10' : 'text10';\n    case '#40DCFF':\n      return colorMode ? 'color11' : 'text11';\n    case '#0A2D53':\n      return colorMode ? 'color12' : 'text12';\n    case '#E8E8E8':\n      return colorMode ? 'color14' : 'text14';\n    default:\n      return colorMode ? 'color13' : 'text13';\n  }\n};\n\nexport default formatClassname;\n"]},"metadata":{},"sourceType":"module"}